h1. SimpleData

h3. A friendly abstraction for CoreData

Aim: Gain all the speed of CoreData but with a friendly, ActiveRecord style interface. 
_Please note_: This is just an outline of how it _should_ work. Most of what is described below is not yet implemented.

h4. Step 1: Create a data model
* Go to  File > New File then choosing Resource > Data Model
* Open the data model and edit it to your hearts desire

h4. Step 2: Create the class representations
* In the data model editor, select classes you wish to use in your project
* Choose File > New File. In the New File dialog, select Managed Object Class.
* Depending on the version of Xcode you’re using, the Managed Object Class may be available in the iPhone OS section under Cocoa Touch Classes, or you may need to choose the template in the Mac OS X section, under Cocoa—either will work correctly.
* Click Next. The correct location and targets should have been selected for you. Click Next to accept them.
* You should see the Entity selection pane, with the Event entity selected. The “Generate accessors” and “Generate Objective-C 2.0 properties” options should also be selected.
* Click Finish to generate the files.

You are now ready to start coding with SimpleData

h4. Step 3: Create a SimpleStore
* First, import the SimpleStore header
<pre>#import &lt;SimpleStore.h&gt;</pre>
* To create or open an existing database simply call:
<pre>[SimpleStore storeWithPath: @"path"];</pre>

h4. Step 4: Enjoy!
* To create an object:
<pre>[User createWithAttributes:attributesDict];</pre>
* To find an object:
<pre>[User findByName:@"Brian"];
[User findAll]</pre>
* To update an object:
<pre>User *u = [User findByName:@"Brian"];
u.name = @"Brian Collins";
u.save;
</pre>

h4. Limitations
* Currently,
** You may only have one SimpleStore per application.
** There is no validation
** No sorting
** No other find conditions than equality
